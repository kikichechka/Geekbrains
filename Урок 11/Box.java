package com.geekbrains.Lesson11;

import java.util.ArrayList;
import java.util.List;

//–ö–ª–∞—Å—Å Box, –≤ –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–Ω–æ —Å–∫–ª–∞–¥—ã–≤–∞—Ç—å —Ñ—Ä—É–∫—Ç—ã. –ö–æ—Ä–æ–±–∫–∏ —É—Å–ª–æ–≤–Ω–æ —Å–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è –ø–æ —Ç–∏–ø—É —Ñ—Ä—É–∫—Ç–∞,
//–ø–æ—ç—Ç–æ–º—É –≤ –æ–¥–Ω—É –∫–æ—Ä–æ–±–∫—É –Ω–µ–ª—å–∑—è —Å–ª–æ–∂–∏—Ç—å –∏ —è–±–ª–æ–∫–∏, –∏ –∞–ø–µ–ª—å—Å–∏–Ω—ã;
class Box<T extends Fruits> {
    public String boxName;
    private List<T> list;
    public float weight;

    public Box(String boxName) {
        this.boxName = boxName;
        this.weight = weight;
        list = new ArrayList<T>();
    }

    void add2 (T object) {
        list.add(object);
    }

    public void empty (Box<T> box) {
        System.out.printf("\nüì¶ -> üì¶ –ü–µ—Ä–µ—Å—ã–ø–∞–ª–∏ –≤—Å–µ %s –∏–∑ –∫–æ—Ä–æ–±–∫–∏ %s –≤ –∫–æ—Ä–æ–±–∫—É %s.\n"
                , list.get(0).toString(), this.boxName, box.boxName);
        for (T o: list) {
            box.add2(o);
        }
        list.clear();
        System.out.printf("–¢–µ–ø–µ—Ä—å –≤ –∫–æ—Ä–æ–±–∫–µ %s –Ω–∞—Ö–æ–¥—è—Ç—Å—è %s –≤ –∫–æ–ª–ª–∏—á–µ—Å—Ç–≤–µ: %s —à—Ç.\n", box.boxName, box.list.get(0).toString(), box.list.size());
    }

    void addAndPrintFruits(T object) { // –¥–æ–±–∞–≤–ª—è–µ–º —Ñ—Ä—É–∫—Ç—ã –≤ –∫–æ—Ä–æ–±–∫—É –∏ –≤—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –≤ –∫–æ–Ω—Å–æ–ª—å
        for (int i = 0; i < object.number; i++)
            list.add(object);
        if (list.isEmpty())
            System.out.println("üì¶‚ùå–ö–æ—Ä–æ–±–∫–∞ –ø—É—Å—Ç–∞");
        else
            System.out.printf("üì¶ –í –∫–æ—Ä–æ–±–∫–µ %s –Ω–∞—Ö–æ–¥—è—Ç—Å—è %s –≤ –∫–æ–ª–∏—á–µ—Å—Ç–≤–µ %s —à—Ç. –í–µ—Å –∫–æ—Ä–æ–±–∫–∏ —Å–æ—Å—Ç–∞–≤–ª—è–µ—Ç %f –∫–≥.\n"
                    , boxName, list.get(0).toString(), list.size(), getWeight());
    }


    public float getWeight() {
        weight = (list.size() * T.weight) / 1000;
        return weight;
    }

    boolean compare(Box<? extends Fruits> box) {
        System.out.printf("\nüì¶ ‚öñ üì¶ –°—Ä–∞–≤–Ω–∏–º –≤–µ—Å –∫–æ—Ä–æ–±–∫–∏ %s –∏ –∫–æ—Ä–æ–±–∫–∏ %s: ", this.boxName, box.boxName);
        return this.getWeight() == box.getWeight();
    }
}